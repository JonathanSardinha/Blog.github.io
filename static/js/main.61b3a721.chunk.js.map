{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Bloglist","blogs","title","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61b3a721.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <h1>The Dojo Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New Blog</Link></div>\r\n              \r\n                <Link  to=\"/create\" className=\"contact\">Contact Us</Link>\r\n            \r\n        </nav>\r\n      );\r\n}\r\n \r\nexport default Navbar;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Bloglist = ({blogs, title}) => {\r\n    \r\n    return (\r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog) => (\r\n           <div className=\"blog-preview\" key={blog.id}>\r\n               <Link to = {`/blogs/${blog.id}`}>\r\n            <h2>{blog.title}</h2>\r\n            <p>Written By {blog.author}</p>\r\n            </Link>\r\n           </div>\r\n        ))}\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default Bloglist;","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n      fetch(url,{signal: abortCont.signal})\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        // auto catches network / connection error\r\n        if (err.name === 'AbortError'){\r\n          console.log('fetch aborted');\r\n        } else {\r\n          setIsPending(false);\r\n          setError(err.message);\r\n        }\r\n        \r\n      })\r\n    }, 1000);\r\n\r\n    return () => abortCont.abort();\r\n  }, [url])\r\n\r\n  return { data, isPending, error };\r\n}\r\n \r\nexport default useFetch;","\r\nimport Bloglist from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\nconst Home = () => {\r\n    const {data: blogs, isPending, error} = useFetch('http://localhost:8000/blogs');\r\n    return (\r\n        <div className=\"home\">\r\n          {error && <div>{error}</div>}\r\n          {isPending && <div>Loading..</div>}\r\n        {blogs && <Bloglist blogs={blogs} title=\"All Blogs!\"/>}\r\n        </div>\r\n      );\r\n    }\r\n\r\n \r\nexport default Home;\r\n","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Create = () => {\r\n   const [title, setTitle] = useState('');\r\n   const [body, setBody] = useState('');\r\n   const [author, setAuthor] = useState('Mario');\r\n   const [isPending, setIsPending] = useState(false);\r\n   const history = useHistory();\r\n\r\n   const handleSubmit = (e) => {\r\n       e.preventDefault();\r\n       const blog = { title, body, author};\r\n\r\n       setIsPending(true);\r\n\r\n       fetch('http://localhost:8000/blogs/',{\r\n         method: 'POST',\r\n         headers: {\"Content-Type\": \"application/json\"},\r\n         body: JSON.stringify(blog)  \r\n       }) .then(() =>{\r\n           console.log('new blog added');\r\n           setIsPending(false);\r\n           history.push('/')\r\n       }) \r\n\r\n   }\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add a new Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog title:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={title}\r\n                    onChange={(e) => setTitle(e.target.value)}\r\n                    />\r\n                    <label>Blog body:</label>\r\n                    <textarea\r\n                    required\r\n                    value={body}\r\n                    onChange={(e) => setBody(e.target.value)}\r\n                    ></textarea>\r\n                    <label>Blog Author:</label>\r\n                    <select\r\n                    value={author}\r\n                    onChange={(e) => setAuthor(e.target.value)}>\r\n                        <option value=\"mario\">mario</option>\r\n                        <option value=\"yoshi\">yoshi</option>\r\n                    </select>\r\n                    { !isPending && <button>Add blog</button>}\r\n                    { isPending && <button disabled>Adding blog ... </button>}\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory,useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\nconst BlogDetails = () => {\r\n    const {id} = useParams();\r\n    const { data:blog,error,isPending} = useFetch('http://localhost:8000/blogs/' +id);\r\n    const history = useHistory();\r\n \r\n    const handleClick= () => {\r\n        fetch('http://localhost:8000/blogs/' +blog.id,{\r\n            method:'DELETE'\r\n        }).then(() => {\r\n            history.push('/');\r\n        })\r\n    }\r\n  return (\r\n    <div className=\"blog-details\">\r\n        {isPending && <div>Loading ...</div>}\r\n        {error && <div> {error} </div>}\r\n        {blog && (\r\n            <article>\r\n                <h2>{blog.title}</h2>\r\n                <p>Written by {blog.author}</p>\r\n                <div>{blog.body}</div>\r\n                <button onClick={handleClick}>delete</button>\r\n            </article>\r\n        )}\r\n    \r\n    </div>\r\n  );\r\n}\r\n \r\nexport default BlogDetails;","import {Link} from \"react-router-dom\"\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"not-found\">\r\n            <h2>Sorry</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to=\"/\">Back to the Homepage ....</Link>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default NotFound;","\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router,Route,Switch} from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/create\">\n              <Create />\n            </Route>\n            <Route path=\"/blogs/:id\">\n              <BlogDetails />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        \n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}